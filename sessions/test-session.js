const { TelegramClient } = require('telegram');
const { StringSession } = require('telegram/sessions');
const input = require('input');
require('dotenv').config();

async function createTestSession() {
    const apiId = parseInt(process.env.TELEGRAM_API_ID);
    const apiHash = process.env.TELEGRAM_API_HASH;
    
    console.log('API ID:', apiId);
    console.log('API Hash:', apiHash ? '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù');
    
    const stringSession = new StringSession('');
    
    const client = new TelegramClient(stringSession, apiId, apiHash, {
        connectionRetries: 5,
    });
    
    try {
        await client.start({
            phoneNumber: async () => await input.text('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: '),
            phoneCode: async () => await input.text('–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ Telegram: '),
            password: async () => await input.text('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å 2FA (–µ—Å–ª–∏ –Ω–µ—Ç - –ø—Ä–æ—Å—Ç–æ Enter): '),
            onError: (err) => console.log(err),
        });
        
        console.log('\n‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å!');
        
        const sessionString = client.session.save();
        console.log('\nüìù –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É —Å–µ—Å—Å–∏–∏:');
        console.log(sessionString);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É
        const channelUsername = await input.text('\n–í–≤–µ–¥–∏—Ç–µ username –∫–∞–Ω–∞–ª–∞ (—Å @): ');
        
        try {
            const channel = await client.getEntity(channelUsername);
            console.log(`\n‚úÖ –ö–∞–Ω–∞–ª ${channel.title} –Ω–∞–π–¥–µ–Ω!`);
        } catch (err) {
            console.log('\n‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω:', err.message);
        }
        
        await client.disconnect();
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
    }
}

createTestSession();